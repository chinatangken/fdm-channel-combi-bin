# <---------------------- 耗材处理 begin---------------------->

[gcode_macro NOZZLE_CLEAR_INERTIA]
description: 利用耗材惯性清理喷嘴
variable_extr_x: 5
variable_extr_y: -6
gcode:
    {% set extr_pump = params.PUMP|default(2.5)|float %} #切断废料的回抽量
    {% set extr_fill = params.FILL|default(0)|float %} #清理后耗材装填量
    {% set now_fila_motor = printer.save_variables.variables.current_fila_motor %} #当前通道
  # 保存当前配置
  SAVE_GCODE_STATE NAME=NOZZLE_CLEAR_INERTIA_state
  {% set current_accel = printer.toolhead.max_accel %}
  {% set current_decel = printer.toolhead.max_accel_to_decel %}
  {% set current_fan_speed = printer.fan.speed %}# 保存当前风扇速度
  G90
  G21
  M83
  M106 S0 #关闭风扇方便升温和喷嘴料软化
  #判断并设定挤出温度
    {% set parts = now_fila_motor.split('_') %} #提取最后下划线后数值
    {% set last_value = parts[-1] %}
    {% set load_temp_var = 'load_temp_chan_' ~ last_value %}
    {% set load_temp = printer.save_variables.variables[load_temp_var]|default(-273.14)|float %}#提取通道号对应温度
    RESPOND MSG="FILA_START：检索到{load_temp_var} = {load_temp} ℃"
      {% if load_temp <= -273 %}
        RESPOND MSG="FILA_START：通道{last_value} 耗材温度设置未保存，使用当前温度"
        {% set extruder_target = printer.extruder.target %} #获取当前目标温度
        {% if extruder_target < 200 %}
            RESPOND MSG="FILA_START：当前温度设定低于200，使用默认值load_temp_default"
            {% set extruder_target = printer.save_variables.variables.load_temp_default|default(230)|float %} %}
            RESPOND MSG="FILA_START：检索到 load_temp_default = {load_temp_default} ℃"
        {% endif %}
        {% set load_temp = extruder_target %} #设定挤出温度
      {% endif %}
    #判断并设定挤出速度
    {% set parts = now_fila_motor.split('_') %} #提取最后下划线后数值
    {% set last_value = parts[-1] %}
    {% set extr_speed_var = 'extr_speed_chan_' ~ last_value %}
    {% set extr_speed = printer.save_variables.variables[extr_speed_var]|default(-1)|float %}#提取通道号对应温度
    RESPOND MSG="FILA_START：检索到{extr_speed_var} = {extr_speed} mm/min"
    {% if extr_speed <= 0 %}
      RESPOND MSG="FILA_START：通道{last_value} 耗材挤出速度设置未保存，使用默认值extr_speed_chan_default"
      {% set extr_speed = printer.save_variables.variables.extr_speed_chan_default|default(1000)|float %} #设定挤出速度
      RESPOND MSG="FILA_START：检索到extr_speed_chan_default = {extr_speed} mm/min"
    {% endif %}

    
  M104 S{load_temp} #预热
  #到挤出点挤出
  SET_VELOCITY_LIMIT ACCEL=30000 ACCEL_TO_DECEL=30000
  G1 X{extr_x} Y{extr_y} F30000
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={load_temp -1}
  M106 S0
  G1 E30 F{extr_speed}
  G1 E50 F{extr_speed}
  # SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_target -50}
  # TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={extruder_target -49}
  G1 E{-extr_pump} F1000
  #惯性除料
  SET_VELOCITY_LIMIT ACCEL=50000 ACCEL_TO_DECEL=50000
  G1 F30000
  {% for i in range(1) %} #甩料
    {% for i in range(5) %} #甩料
      G1 X{extr_x +20}
      G1 X{extr_x}
    {% endfor %}
    G1 X{extr_x +200}
    {% for i in range(5) %} #甩料
      G1 X{extr_x +200-20}
      G1 X{extr_x +200}
    {% endfor %}
    # G1 X{extr_x}
  {% endfor %}
  G1 E{extr_fill} F500
  # 恢复加速度和减速度,模型风扇速度
  SET_VELOCITY_LIMIT ACCEL={ current_accel } ACCEL_TO_DECEL={ current_decel }
  M106 S0{ current_fan_speed }
  RESTORE_GCODE_STATE NAME=NOZZLE_CLEAR_INERTIA_state
  # 显示恢复的设置
  RESPOND MSG="NOZZLE_CLEAR_INERTIA：ACCEL={ current_accel } DECEL={ current_decel } FAN={ current_fan_speed }"

[gcode_macro NOZZLE_CLEAR]
description: 喷嘴清理
gcode:
    {% set head_temp = params.EXTRUDER|default(230)|float %}
    M104 S{head_temp -40}
    M117 "wait extruder temp up {printer.extruder.target}"
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={head_temp -41} #{printer.extruder.target}
    G28 Z
    M104 S{head_temp}
    G90 #绝对运动模式
    M83 #相对挤出
    G1 X100 Y5 Z0.3 F20000 
    # G1 X0 Y5 Z0.3 F5000 
    # G1 X20 Y5 Z0.3 F5000 
    G1 X5 Y5 Z0.3 F5000 
    # M109 S{head_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={head_temp} #等待指定温度传感器读数高于 MINIMUM 和或低于 MAXIMUM。
    G1 E15 F300 #挤出附着热床
    # G1 Z1.8 E20 F20
    M106 S255
    # G1 E-10 F1000
    G1 Z5 E20 F20
    G1 Z10 F200
    G1 X40 Y40  F5000
    M106 S0
    G92 E0

[gcode_macro PREHEAT]
description: 预热
gcode:
    {% set head_temp = params.EXTRUDER|default(170)|float %}
    {% set bed_temp = params.BED|default(60)|float %}
    M104 S{head_temp}
    M140 S{bed_temp}

[gcode_macro LOAD_FILAMENT]
# variable_load_distance:  50
variable_purge_distance:  150
gcode:
    SAVE_GCODE_STATE NAME=load_state
    {% set extruder_target = printer.extruder.target %}
    {% if printer.extruder.target < 200 %}
        # M104 S230
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=230
        {% set extruder_target = 230 %}
    {% endif %}
    RESPOND MSG="准备加载耗材，等待升温"
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_target -1}
    RESPOND MSG="正在加载耗材"
    G91
    G92 E0
    # G1 E{load_distance} F1000 # fast-load
    G1 E{purge_distance} F300 # purge
    # 循环检查挤出机状态
    G4 P100 #电机状态反应时间缓冲
    {% set stop_loop = false %} #结束循环标志
    {% for i in range(0, 200) if not stop_loop %} #最多循环200 * 100毫秒
        {% if printer["gcode_macro READ_EXTRUDER_VELOCITY"].velocity == 0 %}
            {% set stop_loop = true %}
        {% else %}
            G4 P100  # 等待100毫秒
        {% endif %}
    {% endfor %}
    # G4 S(purge_distance / 50) + (unload_distance / 200)
    RESPOND MSG="加载耗材结束"
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  100
variable_purge_distance:  5
gcode:
    
    SAVE_GCODE_STATE NAME=unload_state
    {% set extruder_target = printer.extruder.target %}
    {% if printer.extruder.target < 200 %}
        # M104 S230
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=230
        {% set extruder_target = 230 %}
    {% endif %}
    RESPOND MSG="准备卸载耗材，等待升温"
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_target -1}
    RESPOND MSG="正在卸载耗材"
    G91
    G92 E0
    G1 E{purge_distance} F300 # purge
    G1 E-{unload_distance} F1000 # fast-unload\
    # 循环检查挤出机状态
    G4 P100 #电机状态反应时间缓冲
    {% set stop_loop = false %} #结束循环标志
    {% for i in range(0, 100) if not stop_loop %} #最多循环100 * 100毫秒
        {% if printer["gcode_macro READ_EXTRUDER_VELOCITY"].velocity == 0 %}
            {% set stop_loop = true %}
        {% else %}
            G4 P100  # 等待100毫秒
        {% endif %}
    {% endfor %}
    # G4 S(purge_distance / 50) + (unload_distance / 200)
    RESPOND MSG="卸载耗材结束"
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro FLOW_TEST]
description: 流量测试，输入流量体积(mm³)
gcode:
    {% set flow = params.FLOW|default(0)|float %}
    {% if flow <= 0 %}
        RESPOND MSG="请输入挤出流量"
    {% elif printer.extruder.target < 200 %}
        RESPOND MSG="目标温度低于200，请重新设置温度"
    {% else %}
        {% set dia = 1.75 %} #线性1.75mm
        {% set e_speed = flow * 60 / (3.14159 * 1.75) %} #e_speed  = 流量（mm³/s）* 60 / （2 * pi * r）
        
        G90 #绝对运动模式
        M83 #相对挤出
        G1 X150 Y5 Z200 F12000 
        M106 S255
        RESPOND MSG="准备挤出，等待升温"
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer.extruder.target -1}
        RESPOND MSG="正在以目标流量挤出"
        G1 E200 F{e_speed}
        # 循环检查挤出机状态
        G4 P100 #电机状态反应时间缓冲
        {% set stop_loop = false %} #结束循环标志
        {% for i in range(0, 300) if not stop_loop %} #最多循环300 * 100毫秒
            {% if printer["gcode_macro READ_EXTRUDER_VELOCITY"].velocity == 0 %}
                {% set stop_loop = true %}
            {% else %}
                G4 P100  # 等待100毫秒
            {% endif %}
        {% endfor %}
        M106 S0
        RESPOND MSG="挤出结束"
    {% endif %}


# <---------------------- 耗材处理 end---------------------->


# <---------------------- 快捷运动 begin---------------------->
[gcode_macro LOAD_PLATE]
description: 装载床垫
gcode:
    G90
    G1 Z175 F600

[gcode_macro UNLOAD_PLATE]
description: 卸载床垫
gcode:
    G90
    G1 Z225 F600

[gcode_macro GO_FRONT]
description: 运动到仓门口
gcode:
    G1 X150 Y5 F5000 
    
[gcode_macro GO_CENTRAL]
description: 运动到中心
gcode:
    G1 X150 Y150 F5000 
    
[gcode_macro GO_REAT_RAER]
description: 运动到原点
gcode:
    G1 X300 Y300 F5000 

[gcode_macro GO_RELOAD]
description: 运动到换料准备
gcode:
    G1 X300 Y300 Z200 F5000


[gcode_macro GO_ADD_Z0]
description: Z轴独立运动1mm
gcode:
    FORCE_MOVE STEPPER=stepper_z DISTANCE=1 VELOCITY=5 ACCEL=500
    
[gcode_macro GO_DEC_Z0]
description: Z轴独立运动1mm
gcode:
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-1 VELOCITY=5 ACCEL=500

[gcode_macro GO_ADD_Z1]
description: Z轴独立运动1mm
gcode:
    FORCE_MOVE STEPPER=stepper_z1 DISTANCE=1 VELOCITY=5 ACCEL=500
    
[gcode_macro GO_DEC_Z1]
description: Z轴独立运动1mm
gcode:
    FORCE_MOVE STEPPER=stepper_z1 DISTANCE=-1 VELOCITY=5 ACCEL=500

[gcode_macro GO_ADD_Z2]
description: Z轴独立运动1mm
gcode:
    FORCE_MOVE STEPPER=stepper_z2 DISTANCE=1 VELOCITY=5 ACCEL=500
    
[gcode_macro GO_DEC_Z2]
description: Z轴独立运动1mm
gcode:
    FORCE_MOVE STEPPER=stepper_z2 DISTANCE=-1 VELOCITY=5 ACCEL=500


[gcode_macro GO_ADD_ALL_Z]
description: Z轴独立运动5mm
gcode:
    FORCE_MOVE STEPPER=stepper_z DISTANCE=5 VELOCITY=10 ACCEL=1000
    FORCE_MOVE STEPPER=stepper_z1 DISTANCE=5 VELOCITY=10 ACCEL=1000
    FORCE_MOVE STEPPER=stepper_z2 DISTANCE=5 VELOCITY=10 ACCEL=1000



[gcode_macro GO_DEC_ALL_Z]
description: Z轴独立运动-5mm
gcode:
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-5 VELOCITY=10 ACCEL=1000
    FORCE_MOVE STEPPER=stepper_z1 DISTANCE=-5 VELOCITY=10 ACCEL=1000
    FORCE_MOVE STEPPER=stepper_z2 DISTANCE=-5 VELOCITY=10 ACCEL=1000


# <---------------------- 快捷运动 end---------------------->

# <---------------------- 存储 begin---------------------->
[save_variables]
filename: ./save-variables.cfg #必须提供一个可以用来保存参数到磁盘的文件名。
# SAVE_VARIABLE VARIABLE=<name> VALUE=<value>：将变量保存到磁盘，以便在重新启动时使用。
# 所有存储的变量都会在启动时加载到 printer.save_variables.variables 目录中，并可以在 gcode 宏中使用。

# <---------------------- 存储 begin---------------------->

# <---------------------- 开机动作 begin---------------------->

[delayed_gcode INIT_PRINTER] #开机动作
gcode:
    G_LED_IDLE
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={printer.save_variables.variables.bed_temp_init}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer.save_variables.variables.head_temp_init}
    # SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0 #设置灯丝传感器的开/关。如果 ENABLE 设置为 0，耗材传感器将被禁用，如果设置为 1是启用。
    MUITI_INIT
#   当延迟时间结束后执行的G代码命令列表。支持G代码模板。
#   必须提供这个参数。
initial_duration:1
#   初始延迟的持续时间(以秒为单位)。如果设置为一个
#   非零值，delayed_gcode 将在打印机进入 "就绪 "状态后指定
#   秒数后执行。可能对初始化程序或重复的 delayed_gcode 有
#   用。如果设置为 0，delayed_gcode 将在启动时不执行。
# 默认为0。

[gcode_macro SET_TEMP_INIT] #设置开机温度
gcode:
    SAVE_VARIABLE VARIABLE=bed_temp_init VALUE={params.BED_TEMP|default(0)|float}
    SAVE_VARIABLE VARIABLE=head_temp_init VALUE={params.HEAD_TEMP|default(0)|float}

    
# <---------------------- 开机动作 end---------------------->

# <---------------------- 关机动作 begin---------------------->
[delayed_gcode DELAY_SHUTDOWN_FIRMWARE]
gcode:
	{action_call_remote_method("shutdown_machine")} #关闭linux

[gcode_macro SHUTDOWN]
gcode:
    RESPOND MSG="注意即将关机，正在等待热端降温。"
    M84 #关闭电机
    TURN_OFF_HEATERS
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=100
    G_LED_OFF
    # {action_call_remote_method("shutdown_machine")}
    UPDATE_DELAYED_GCODE ID=DELAY_SHUTDOWN_FIRMWARE DURATION=1 #延后关闭linux
    # { action_emergency_stop() } #关闭FIRMWARE

# <---------------------- 关机动作 end---------------------->


# <---------------------- tool begin---------------------->
[gcode_macro READ_EXTRUDER_VELOCITY]
description: 读取当前挤出机运动速度
variable_velocity:0
gcode:
  SET_GCODE_VARIABLE MACRO=READ_EXTRUDER_VELOCITY VARIABLE=velocity VALUE={printer.motion_report.live_extruder_velocity}


[gcode_macro G_TEST]
gcode:
    # {% set queue = printer['extruder_stepper FILA_MOTOR_1'].motion_queue %}
    # # {% set min_temp = printer.configfile.settings['extruder']['min_extrude_temp'] %}
    # # {% set temper_ = 11 %}
    # { action_respond_info("G_TEST: G_TEST_REFRESH=" ~ printer["gcode_macro READ_EXTRUDER_VELOCITY"].velocity) }
    # G4 P5000  # 等待毫秒
    {% set current_state = printer.print_stats.state %}
    RESPOND MSG="printer.print_stats.state: {printer.print_stats.state}"
    RESPOND MSG="printer.idle_timeout: {printer.idle_timeout.state}"
    # G4 P5000  # 等待毫秒
    # { action_respond_info("G_TEST: 等待10S") }
    # RESPOND MSG="printer.extruder_stepper: {printer.extruder_stepper}"
    
    # {% set sensor_name = "filament_switch_sensor chan_over_sensor_" ~ chan %}
    # {% set sensor_triggered = True %}
    # {% if printer.configfile.settings[sensor_name] is defined %}
    #     {% set sensor_triggered = printer[sensor_name].state %}

  
[gcode_macro DEBUG_BUTTON]
gcode:
    RESPOND MSG="button is work!"

# <---------------------- tool end---------------------->